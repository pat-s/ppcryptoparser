[{"path":"https://pat-s.github.io/ppcryptoparser/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 ppcryptoparser authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Patrick Schratz. Author, maintainer.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schratz P (2021). ppcryptoparser: Portfolio Performance Crypto Currency Staking Parser. https://github.com/pat-s/ppcryptoparser, https://pat-s.github.io/ppcryptoparser.","code":"@Manual{,   title = {ppcryptoparser: Portfolio Performance Crypto Currency Staking Parser},   author = {Patrick Schratz},   year = {2021},   note = {https://github.com/pat-s/ppcryptoparser, https://pat-s.github.io/ppcryptoparser}, }"},{"path":"https://pat-s.github.io/ppcryptoparser/index.html","id":"ppcryptoparser","dir":"","previous_headings":"","what":"Portfolio Performance Crypto Currency Staking Parser","title":"Portfolio Performance Crypto Currency Staking Parser","text":"goal {ppcryptoparser} simplify import staking reward various altcoins Portfolio Performance.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Portfolio Performance Crypto Currency Staking Parser","text":"need working installation R. Windows: scoop install r download CRAN. macOS: brew install --cask r download CRAN. Ubuntu: apt install r-base can install ppcryptoparser GitHub :","code":"install.packages(\"remotes\") remotes::install_github(\"pat-s/ppcryptoparser\")"},{"path":"https://pat-s.github.io/ppcryptoparser/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Portfolio Performance Crypto Currency Staking Parser","text":"Spin R session calling “R” terminal run Please also consult help files function, either command line via ?<function name> looking pkgdown page package.","code":"library(\"ppcryptoparser\")  parse_polkadot(<address>, <csv output file>)"},{"path":"https://pat-s.github.io/ppcryptoparser/index.html","id":"supported-coins","dir":"","previous_headings":"","what":"Supported Coins","title":"Portfolio Performance Crypto Currency Staking Parser","text":"Cardano (ADA) Polkadot (DOT) Kusama (KSM) Solana (SOL) - API Key needed!","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/index.html","id":"planned-support","dir":"","previous_headings":"","what":"Planned Support","title":"Portfolio Performance Crypto Currency Staking Parser","text":"Terra (LUNA) Polygon (MATIC)","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/index.html","id":"language--currency","dir":"","previous_headings":"","what":"Language & Currency","title":"Portfolio Performance Crypto Currency Staking Parser","text":"default language set (US) English (\"EN\"). language setting match language used Portfolio Performance.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/index.html","id":"viewing-statistics-in-portfolio-performance","dir":"","previous_headings":"","what":"Viewing statistics in Portfolio Performance","title":"Portfolio Performance Crypto Currency Staking Parser","text":"Staking statistics inbound deliveries can viewed “Payments -> Savings” (German: “Zahlungen -> Ersparnisse”). see staking rewards menu, need book staking rewards dedicated depot contains staking rewards. can select depot via filter option. Otherwise, selecting complete portfolio, also buy actions included overview blur statistics.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/index.html","id":"encoding--windows","dir":"","previous_headings":"","what":"Encoding & Windows","title":"Portfolio Performance Crypto Currency Staking Parser","text":"’ve seen Windows machines, encoding might set something else “UTF-8”, causing issues processing. Also Windows seems set decimal separator . instead ,, causes wrong import data. case, edit resulting .csv file change decimal separators , . check whether import working intended. might add argument functions account within R package.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/index.html","id":"csv-import","dir":"","previous_headings":"","what":"CSV Import","title":"Portfolio Performance Crypto Currency Staking Parser","text":"importing, ensure choose type “Depotumsätze” / “Portfolio Transactions”: Screenshot showing import CSV","code":""},{"path":[]},{"path":"https://pat-s.github.io/ppcryptoparser/index.html","id":"kusama","dir":"","previous_headings":"Coin-specific Infos","what":"Kusama","title":"Portfolio Performance Crypto Currency Staking Parser","text":"Kusama pays rewards every six hours. parse_kusama() comes argument `“by_day” aggregates rewards day.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/index.html","id":"solana","dir":"","previous_headings":"Coin-specific Infos","what":"Solana","title":"Portfolio Performance Crypto Currency Staking Parser","text":"Solana data queried https://solanabeach.io requires API key. Instructions ask API key can found GitHub README. Solana staking account topped , hence often one staking account exists. parse_solana() able account merging rewards multiple addresses. , one needs pass addresses vector like ","code":"parse_solana(c(\"<address1>\", \"<address2>\"), by_day = TRUE)"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/binance_klines.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Binance Klines API data — binance_klines","title":"Get Binance Klines API data — binance_klines","text":"time returned UNIX time format (milliseconds). convert date format, ","code":"as.Date(as.POSIXct(<time> / 1e3 ,origin = \"1970-01-01\", tz = \"GMT\"))"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/binance_klines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Binance Klines API data — binance_klines","text":"","code":"binance_klines(start_time, interval = \"1d\", symbol = \"DOTEUR\")"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/binance_klines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Binance Klines API data — binance_klines","text":"start_time [character] Start time UNIX date format origin = \"1970-01-01\". interval [character] interval get data . Defaults one day. possible values '1m', '3m', '5m', '15m', '30m', '1h', '2h', '4h', '6h', '8h', '12h', '1d', '3d', '1w', '1M'. symbol [character] currency pair.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/binance_klines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Binance Klines API data — binance_klines","text":"tibble::tibble","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/binance_klines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Binance Klines API data — binance_klines","text":"","code":"# 2021-06-24 binance_klines(\"1630808472\") #> # A tibble: 404 × 12 #>        Timestamp Open   High   Low    Close Volume `Close Time` `Quote asset vo… #>            <dbl> <chr>  <chr>  <chr>  <chr> <chr>         <dbl> <chr>            #>  1 1604016000000 5.270… 5.270… 3.450… 3.52… 4270.…      1.60e12 15020.85481100   #>  2 1604102400000 3.493… 3.694… 3.493… 3.60… 4081.…      1.60e12 14813.35247300   #>  3 1604188800000 3.595… 3.633… 3.546… 3.63… 2220.…      1.60e12 7960.53372500    #>  4 1604275200000 3.641… 3.668… 3.423… 3.47… 14574…      1.60e12 51129.14293800   #>  5 1604361600000 3.473… 3.494… 3.350… 3.43… 17126…      1.60e12 58221.12018300   #>  6 1604448000000 3.439… 3.548… 3.337… 3.49… 16333…      1.60e12 56230.12557000   #>  7 1604534400000 3.497… 3.645… 3.400… 3.58… 13446…      1.60e12 47405.62429900   #>  8 1604620800000 3.567… 3.906… 3.556… 3.90… 20799…      1.60e12 78601.76232600   #>  9 1604707200000 3.878… 4.076… 3.414… 3.55… 16197…      1.60e12 59625.13136000   #> 10 1604793600000 3.546… 3.726… 3.480… 3.67… 6620.…      1.60e12 24211.46845600   #> # … with 394 more rows, and 4 more variables: Number of trades <int>, #> #   Taker buy base asset volume <chr>, Taker buy quote asset volume <chr>, #> #   Ignore <chr>"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/cardano.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Cardano Data — cardano","title":"Example Cardano Data — cardano","text":"Example Cardano CSV retrieved https://pooltool.io via \"generic\" CSV export","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/cardano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Cardano Data — cardano","text":"","code":"cardano"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/cardano.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Cardano Data — cardano","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 7 rows 12 columns.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/helper_dec.html","id":null,"dir":"Reference","previous_headings":"","what":"Decimal helper function — helper_dec","title":"Decimal helper function — helper_dec","text":"Decimal helper function","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/helper_dec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decimal helper function — helper_dec","text":"","code":"helper_dec(dec, pp_lang)"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_cardano.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Cardano Staking Rewards — parse_cardano","title":"Parse Cardano Staking Rewards — parse_cardano","text":"Reads generic CSV outputs pooltool.io transposes format can read Portfolio Performance. Rewards classified \"Delivery (Inbound)\" (German: \"Einlieferung\") category different \"buy\" \"interest\".","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_cardano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Cardano Staking Rewards — parse_cardano","text":"","code":"parse_cardano(   data,   pp_security_name = \"Cardano\",   pp_lang = \"DE\",   securities_account = NULL,   filename = NULL,   dec = NULL,   sep = \";\" )"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_cardano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Cardano Staking Rewards — parse_cardano","text":"data character (generic) input CSV https://pooltool.io. pp_security_name character name security Portfolio Performance (e.g. \"Kusama\"). pp_lang character currency Portfolio Performance. German (\"DE\") English (\"EN\") supported. securities_account character name account associate deliveries. German called \"Depot\". filename character output filename. dec character  Decimal separator. set, inferred value argument pp_lang: pp_lang = \"DE\" -> dec = \",\" pp_lang = \"EN\" -> dec = \".\" sep character  Columns separator. Defaults ;.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_cardano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Cardano Staking Rewards — parse_cardano","text":"data.frame (Invisible)","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_cardano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Cardano Staking Rewards — parse_cardano","text":"","code":"data(\"cardano\") parse_cardano(cardano, pp_lang = \"DE\") #> ℹ Setting decimal separator to `,` because `pp_lang = 'DE'` is set. If this is #> undesired and/or you want to silence this warning, please explicitly set #> argument `dec`. parse_cardano(cardano, pp_lang = \"EN\") #> ℹ Setting decimal separator to `.` because `pp_lang = 'EN'` is set. If this is #> undesired and/or you want to silence this warning, please explicitly set #> argument `dec`."},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_kusama.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Kusama Staking Rewards — parse_kusama","title":"Parse Kusama Staking Rewards — parse_kusama","text":"Retrieves staking rewards specific account https://subscan.io. Note default staking rewards aggregated day. Usually, Kusama pays rewards four times per day. want receive individual staking rewards, set by_day = FALSE. coarse aggregation (weekly, monthly) result biased \"Value\" column one need take mean selected period whereas reward payouts actually happened daily base specific coin rate,","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_kusama.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Kusama Staking Rewards — parse_kusama","text":"","code":"parse_kusama(   address,   pp_security_name = \"Kusama\",   currency = \"EUR\",   pp_lang = \"EN\",   securities_account = NULL,   dec = NULL,   sep = \";\",   filename = NULL,   api_key = NULL,   by_day = TRUE )"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_kusama.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Kusama Staking Rewards — parse_kusama","text":"address [character] Wallet address. pp_security_name character name security Portfolio Performance (e.g. \"Kusama\"). currency character Currency calculate staking rewards. Must part valid coin pair Binance, e.g. \"DOTEUR\". pp_lang character currency Portfolio Performance. German (\"DE\") English (\"EN\") supported. securities_account character name account associate deliveries. German called \"Depot\". dec character  Decimal separator. set, inferred value argument pp_lang: pp_lang = \"DE\" -> dec = \",\" pp_lang = \"EN\" -> dec = \".\" sep character  Columns separator. Defaults ;. filename character output filename. api_key character Optional personal API key. by_day logical Whether aggregate day. Kusama staking rewards paid four times per day. set FALSE, individual rewards returned.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_kusama.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Kusama Staking Rewards — parse_kusama","text":"tibble::tibble (invisibly)","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_kusama.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Kusama Staking Rewards — parse_kusama","text":"","code":"parse_kusama(\"E4ZoURFwN9eHPxwwDaijY6zXnTvZ3AwFFQFsnSekRTW2sPQ\", dec = \".\")"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_polkadot.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Polkadot Staking Rewards — parse_polkadot","title":"Parse Polkadot Staking Rewards — parse_polkadot","text":"Retrieves staking rewards specific account https://subscan.io.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_polkadot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Polkadot Staking Rewards — parse_polkadot","text":"","code":"parse_polkadot(   address,   pp_security_name = \"Polkadot\",   currency = \"EUR\",   pp_lang = \"EN\",   securities_account = NULL,   dec = NULL,   sep = \";\",   filename = NULL,   api_key = NULL )"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_polkadot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Polkadot Staking Rewards — parse_polkadot","text":"address [character] Wallet address. pp_security_name character name security Portfolio Performance (e.g. \"Kusama\"). currency character Currency calculate staking rewards. Must part valid coin pair Binance, e.g. \"DOTEUR\". pp_lang character currency Portfolio Performance. German (\"DE\") English (\"EN\") supported. securities_account character name account associate deliveries. German called \"Depot\". dec character  Decimal separator. set, inferred value argument pp_lang: pp_lang = \"DE\" -> dec = \",\" pp_lang = \"EN\" -> dec = \".\" sep character  Columns separator. Defaults ;. filename character output filename. api_key character Optional personal API key.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_polkadot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Polkadot Staking Rewards — parse_polkadot","text":"tibble::tibble (invisibly)","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_polkadot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Polkadot Staking Rewards — parse_polkadot","text":"","code":"parse_polkadot(\"1qEk2g6N1uugFgyvmnsL6P9Conh5nTwL5mj85bm3XHtjc73\", dec = \".\") parse_polkadot(\"1qEk2g6N1uugFgyvmnsL6P9Conh5nTwL5mj85bm3XHtjc73\",   api_key = Sys.getenv(\"subscan_api_key\"), dec = \".\" )"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_solana.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Solana Staking Rewards — parse_solana","title":"Parse Solana Staking Rewards — parse_solana","text":"Retrieves staking rewards specific account https://solanabeach.io.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_solana.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Solana Staking Rewards — parse_solana","text":"","code":"parse_solana(   address,   pp_security_name = \"Solana\",   currency = \"EUR\",   pp_lang = \"EN\",   securities_account = NULL,   api_key,   dec = NULL,   sep = \";\",   filename = NULL,   by_day = TRUE )"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_solana.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Solana Staking Rewards — parse_solana","text":"address [character] Wallet address. pp_security_name character name security Portfolio Performance (e.g. \"Kusama\"). currency character Currency calculate staking rewards. Must part valid coin pair Binance, e.g. \"DOTEUR\". pp_lang character currency Portfolio Performance. German (\"DE\") English (\"EN\") supported. securities_account character name account associate deliveries. German called \"Depot\". api_key character Optional personal API key. dec character  Decimal separator. set, inferred value argument pp_lang: pp_lang = \"DE\" -> dec = \",\" pp_lang = \"EN\" -> dec = \".\" sep character  Columns separator. Defaults ;. filename character output filename. by_day logical Whether aggregate staking rewards different accounts day. set FALSE, individual rewards returned.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_solana.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Solana Staking Rewards — parse_solana","text":"tibble::tibble (invisibly)","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/parse_solana.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Solana Staking Rewards — parse_solana","text":"","code":"# single address parse_solana(\"AsbXE1vn9Z2uZftkQKDMg9cx3ZaKGExxzfwe2u8uj9ZZ\",   api_key = Sys.getenv(\"solanabeach_api_key\"), dec = \".\" ) #> Error: HTTP 403 Forbidden. # multiple addresses parse_solana(c(   \"AsbXE1vn9Z2uZftkQKDMg9cx3ZaKGExxzfwe2u8uj9ZZ\",   \"HUKZz7MK9dMGis2AC8trhSME3WFRSivVMfVDypkkNWJR\" ), pp_lang = \"EN\", dec = \".\", api_key = Sys.getenv(\"solanabeach_api_key\") ) #> Error: HTTP 403 Forbidden."},{"path":"https://pat-s.github.io/ppcryptoparser/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/request_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Make API requests to Polkadot network — request_fun","title":"Make API requests to Polkadot network — request_fun","text":"Make API requests Polkadot network","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/request_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make API requests to Polkadot network — request_fun","text":"","code":"request_fun(address, page, row = 1, api_key = NULL, chain = \"polkadot\")"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/request_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make API requests to Polkadot network — request_fun","text":"address [character] Wallet address. page [integer] page query. row [integer] many rows query per page. api_key character Optional personal API key.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/request_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make API requests to Polkadot network — request_fun","text":"httr2 response","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/request_fun_sol.html","id":null,"dir":"Reference","previous_headings":"","what":"Make API requests to Polkadot network — request_fun_sol","title":"Make API requests to Polkadot network — request_fun_sol","text":"Make API requests Polkadot network","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/request_fun_sol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make API requests to Polkadot network — request_fun_sol","text":"","code":"request_fun_sol(address, cursor = NULL, api_key)"},{"path":"https://pat-s.github.io/ppcryptoparser/reference/request_fun_sol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make API requests to Polkadot network — request_fun_sol","text":"address [character] Wallet address. api_key character Optional personal API key. page [integer] page query. row [integer] many rows query per page.","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/request_fun_sol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make API requests to Polkadot network — request_fun_sol","text":"httr2 response","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/write_csv_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"CSV writer helper function — write_csv_helper","title":"CSV writer helper function — write_csv_helper","text":"CSV writer helper function","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/reference/write_csv_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CSV writer helper function — write_csv_helper","text":"","code":"write_csv_helper(data, filename, dec, sep)"},{"path":"https://pat-s.github.io/ppcryptoparser/news/index.html","id":"ppcryptoparser-022","dir":"Changelog","previous_headings":"","what":"ppcryptoparser 0.2.2","title":"ppcryptoparser 0.2.2","text":"parse_cardano(): add sep argument fix dec argument","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/news/index.html","id":"ppcryptoparser-021","dir":"Changelog","previous_headings":"","what":"ppcryptoparser 0.2.1","title":"ppcryptoparser 0.2.1","text":"Fixed Solana Cardano functions","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/news/index.html","id":"ppcryptoparser-020","dir":"Changelog","previous_headings":"","what":"ppcryptoparser 0.2.0","title":"ppcryptoparser 0.2.0","text":"Support Solana via parse_solana(). Note: API key required, see README instructions. New argument sep functions allowing set column separator CSV output. New argument securities_account specify name securities account Portfolio Performance rewards mapped .","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/news/index.html","id":"ppcryptoparser-010","dir":"Changelog","previous_headings":"","what":"ppcryptoparser 0.1.0","title":"ppcryptoparser 0.1.0","text":"separator CSV outputs now fixed “semicolon” seems global PP default across languages. New argument dec allow setting custom decimal separator. helpful decimal separator follow PP language setting. Allow setting pp_security_name parse_cardano().","code":""},{"path":"https://pat-s.github.io/ppcryptoparser/news/index.html","id":"ppcryptoparser-001","dir":"Changelog","previous_headings":"","what":"ppcryptoparser 0.0.1","title":"ppcryptoparser 0.0.1","text":"Initial release","code":""}]
